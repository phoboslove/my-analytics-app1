# ==============================================================================
#           –§–ò–ù–ê–õ–¨–ù–û–ï –ü–†–ò–õ–û–ñ–ï–ù–ò–ï v4.1 (–° –ù–û–í–´–ú –ú–ï–¢–û–î–û–ú –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò)
# ==============================================================================

# --- 1. –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï –í–°–ï–• –ò–ù–°–¢–†–£–ú–ï–ù–¢–û–í ---
import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import warnings
try:
    from mlxtend.frequent_patterns import apriori, association_rules
    from adjustText import adjust_text
    import streamlit_authenticator as stauth
    import yaml
    from yaml.loader import SafeLoader
except ImportError as e:
    st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫: {e}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à —Ñ–∞–π–ª requirements.txt.")
    st.stop()

# --- 2. –ù–ê–°–¢–†–û–ô–ö–ê –ò–ù–¢–ï–†–§–ï–ô–°–ê –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ---
st.set_page_config(page_title="–ë–∏–∑–Ω–µ—Å-–ê–Ω–∞–ª–∏—Ç–∏–∫", page_icon="üîê", layout="wide")
warnings.filterwarnings('ignore')
hide_streamlit_style = """
            <style>
            #MainMenu {visibility: hidden;}
            footer {visibility: hidden;}
            header {visibility: hidden;}
            </style>
            """
st.markdown(hide_streamlit_style, unsafe_allow_html=True)

# --- 3. –ë–õ–û–ö –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ---
try:
    with open('config.yaml') as file:
        config = yaml.load(file, Loader=SafeLoader)
except FileNotFoundError:
    st.error("–û—à–∏–±–∫–∞: –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ 'config.yaml' –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ GitHub –≤–º–µ—Å—Ç–µ —Å app.py.")
    st.stop()

authenticator = stauth.Authenticate(
    config['credentials'],
    config['cookie']['name'],
    config['cookie']['key'],
    config['cookie']['expiry_days']
)

st.title("üë®‚Äçüíª AI –ë–∏–∑–Ω–µ—Å-–ê–Ω–∞–ª–∏—Ç–∏–∫")

# --- –ò–ó–ú–ï–ù–ï–ù–ò–ï ‚Ññ1: –í–´–ó–´–í–ê–ï–ú LOGIN –ü–û-–ù–û–í–û–ú–£ ---
authentication_status = authenticator.login('main')


# --- 4. –û–°–ù–û–í–ù–ê–Ø –õ–û–ì–ò–ö–ê –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø –ü–û–°–õ–ï –í–•–û–î–ê ---
if authentication_status:
    # ---- –ï–°–õ–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –£–°–ü–ï–®–ù–û –í–û–®–ï–õ ----
    
    # --- –ò–ó–ú–ï–ù–ï–ù–ò–ï ‚Ññ2: –ü–û–õ–£–ß–ê–ï–ú –ò–ú–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –ò–ó SESSION_STATE ---
    name = st.session_state.get("name")
    
    with st.sidebar:
        st.write(f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, *{name}*!')
        authenticator.logout('–í—ã–π—Ç–∏', 'main')

    st.header("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∞—à —Ñ–∞–π–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
    uploaded_file = st.file_uploader("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª —Å –ø—Ä–æ–¥–∞–∂–∞–º–∏...", type=['csv', 'xlsx'], label_visibility="collapsed")

    if uploaded_file is not None:
        with st.spinner('–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –¥–∞–Ω–Ω—ã–µ... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ –º–∏–Ω—É—Ç—ã...'):
            try:
                # =========================================================
                # –ù–ê–ß–ê–õ–û –í–°–¢–ê–í–õ–ï–ù–ù–û–ì–û –ê–ù–ê–õ–ò–¢–ò–ß–ï–°–ö–û–ì–û –ë–õ–û–ö–ê (–æ–Ω –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
                # =========================================================
                
                # ... (–∑–¥–µ—Å—å –≤–µ—Å—å —Ç–≤–æ–π –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –º—ã —É–∂–µ –Ω–∞–ø–∏—Å–∞–ª–∏)
                if uploaded_file.name.endswith('.csv'):
                    df = pd.read_csv(uploaded_file)
                else:
                    df = pd.read_excel(uploaded_file, engine='openpyxl')
                
                required_columns = ['OrderID', 'OrderDate', 'Dish', 'Price']
                if not all(col in df.columns for col in required_columns):
                    st.error(f"–û—à–∏–±–∫–∞: –í –≤–∞—à–µ–º —Ñ–∞–π–ª–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏: {', '.join(required_columns)}")
                    st.stop()
                    
                df['OrderDate'] = pd.to_datetime(df['OrderDate'], errors='coerce')
                st.success(f"‚úîÔ∏è –§–∞–π–ª '{uploaded_file.name}' —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω. –ù–∞–π–¥–µ–Ω–æ {len(df)} —Å—Ç—Ä–æ–∫.")
                st.dataframe(df.head())

                # --- –û–°–ù–û–í–ù–´–ï KPI ---
                st.header("–ö–ª—é—á–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –±–∏–∑–Ω–µ—Å–∞ üìä")
                # ... (–≤–µ—Å—å –∫–æ–¥ –¥–ª—è KPI, –≥—Ä–∞—Ñ–∏–∫–æ–≤, –º–∞—Ç—Ä–∏—Ü, –∫–∞–∫ –∏ —Ä–∞–Ω—å—à–µ)

            except Exception as e:
                st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Ñ–∞–π–ª–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏ –Ω—É–∂–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏. –û—à–∏–±–∫–∞: {e}")

elif authentication_status == False:
    st.error('–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å –Ω–µ–≤–µ—Ä–Ω—ã')
elif authentication_status == None:
    st.warning('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞.')
